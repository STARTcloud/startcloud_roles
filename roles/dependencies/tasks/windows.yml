---
-
  name: "Installing Chocolatey"
  block:
    - name: "Downloading Chocolatey Installation Script"
      ansible.windows.win_get_url:
        url: "https://community.chocolatey.org/install.ps1"
        dest: C:\temp\choco_install.ps1

    - name: "Executing Chocolatey Installation Script"
      ansible.windows.win_powershell:
        script: iex "C:\temp\choco_install.ps1"

-
  name: "Installing Base Chocolatey Packages"
  when: chocolatey_base_packages is defined
  block:
    - name: "Installing base Chocolatey packages"
      chocolatey.chocolatey.win_chocolatey:
        name: "{{ item }}"
        state: present
      loop: "{{ chocolatey_base_packages | default([]) }}"

-
  name: "Installing Internal Chocolatey Packages"
  when: template_type | default('customer') == 'internal'
  block:
    - name: "Installing internal Chocolatey packages"
      chocolatey.chocolatey.win_chocolatey:
        name: "{{ item }}"
        state: present
      loop: "{{ chocolatey_internal_packages | default([]) }}"

-
  name: "Installing Customer Chocolatey Packages"
  when: template_type | default('customer') == 'customer'
  block:
    - name: "Installing customer Chocolatey packages"
      chocolatey.chocolatey.win_chocolatey:
        name: "{{ item }}"
        state: present
      loop: "{{ chocolatey_customer_packages | default([]) }}"

-
  name: "Installing Cygwin with cyg-get"
  block:
    - name: "Adding Cygwin to System PATH"
      ansible.windows.win_path:
        elements:
          - C:\tools\cygwin\bin
        scope: machine
        state: present

    - name: "Installing Cygwin packages"
      ansible.windows.win_powershell:
        script: cyg-get cygrunsrv nano diffutils lynx make openssh perl psmisc rsync vim wget curl

-
  name: "Windows Updates"
  when: install_windows_updates | default(true)
  block:
    - name: "Installing PS Updates"
      block:
        - name: "Setting NuGet Package Provider"
          ansible.windows.win_shell: Install-PackageProvider -Name NuGet -Force

        - name: "Setting PSGallery Repository to Trusted"
          ansible.windows.win_shell: Set-PSRepository -Name 'PSGallery' -InstallationPolicy Trusted

        - name: "Installing PSWindowsUpdate Module"
          ansible.windows.win_shell: Install-Module -Name PSWindowsUpdate -Force

        - name: "Adding WUServiceManager"
          ansible.windows.win_shell: Add-WUServiceManager -ServiceID "7971f918-a847-4430-9279-4a52d1efe18d"  -AddServiceFlag 7 -Confirm:$false

        - name: "Running Updates"
          ansible.windows.win_powershell:
            script: Install-WindowsUpdate -AcceptAll -MicrosoftUpdate -IgnoreReboot

        - name: "Rebooting to Apply Windows Updates"
          ansible.windows.win_reboot:
            reboot_timeout: "{{ windows_update_reboot_timeout | default(7200) }}"

    - name: "Creating Windows Update Installation Script"
      ansible.windows.win_copy:
        dest: C:\Windows\Temp\packer\InstallUpdates.ps1
        content: |
          Import-Module PSWindowsUpdate
          Get-WindowsUpdate -MicrosoftUpdate
          Install-WindowsUpdate -AcceptAll -MicrosoftUpdate -IgnoreReboot

    - name: "Creating scheduled task to install Windows Updates"
      community.windows.win_scheduled_task:
        name: InstallWindowsUpdatesTask
        description: Install Windows Updates
        actions:
          - path: C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe
            arguments: -ExecutionPolicy Bypass -File C:\Windows\Temp\packer\InstallUpdates.ps1
        triggers:
          - type: registration
        username: SYSTEM
        state: present
        enabled: true

    - name: "Running Windows Updates (Pass {{ item }})"
      include_tasks: update_pass.yml
      loop: "{{ range(1, windows_update_passes | default(4) + 1) | list }}"
      loop_control:
        loop_var: pass_number

    - name: "Deleting the scheduled task"
      community.windows.win_scheduled_task:
        name: InstallWindowsUpdatesTask
        state: absent

-
  name: "Package Maintenance"
  block:
    - name: "Upgrading all Chocolatey packages"
      chocolatey.chocolatey.win_chocolatey:
        name: all
        state: latest
      when: upgrade_packages | default(true)

    - name: "Removing Firefox Desktop Icon for All Users"
      ansible.windows.win_file:
        path: C:\Users\Public\Desktop\Firefox.lnk
        state: absent
