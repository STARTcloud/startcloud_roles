---
# tasks file for startcloud.startcloud_roles.progress

- name: "Debug: Entering progress role"
  ansible.builtin.debug:
    msg: >-
      Entering progress role.
      _progress_role_is_setup_run is {{ _progress_role_is_setup_run | default('NOT DEFINED') }}.
      current_progress_step is {{ current_progress_step if not (_progress_role_is_setup_run | default(false)) else '0 (Setup Phase)' }}.
      progress_description is {{ progress_description if not (_progress_role_is_setup_run | default(false)) else 'Initial Setup Call' }}.

- name: "Progress Role - Setup or Reporting"
  block:
    - name: "Setup Mode: Calculate total progress steps"
      when: _progress_role_is_setup_run is defined and _progress_role_is_setup_run
      block:
        - name: "Initialize calculated total steps"
          ansible.builtin.set_fact:
            _calculated_total_steps: 0

        - name: "Sum progress_units from definitions"
          ansible.builtin.set_fact:
            _calculated_total_steps: "{{ _calculated_total_steps | int + item.progress_units | int }}"
          loop: "{{ _progress_role_definitions_to_calculate }}"
          when: _progress_role_definitions_to_calculate is defined and (_progress_role_definitions_to_calculate | length > 0)

        - name: "Set total_progress_steps_count fact"
          ansible.builtin.set_fact:
            total_progress_steps_count: "{{ _calculated_total_steps }}"

        - name: "Debug: Progress role setup complete"
          ansible.builtin.debug:
            msg: "Progress role setup: total_progress_steps_count set to {{ total_progress_steps_count }}. global_current_progress_step is {{ global_current_progress_step | default('not set yet by playbook vars, but should be 0') }}."

    - name: "Reporting Mode: Display progress"
      when: not (_progress_role_is_setup_run is defined and _progress_role_is_setup_run)
      block:
        # Ensure types are correct upon entry to this block for reporting
        - name: "Ensure progress variables are integers for reporting"
          ansible.builtin.set_fact:
            current_progress_step_int: "{{ current_progress_step | int }}"
            total_progress_steps_count_int: "{{ total_progress_steps_count | int }}"
          when: current_progress_step is defined and total_progress_steps_count is defined

        - name: "Validate progress task inputs for reporting"
          ansible.builtin.assert:
            that:
              - current_progress_step_int is defined
              - total_progress_steps_count_int is defined
              - progress_description is defined
              # - current_progress_step_int is number # Relaxing this, relying on |int filter
              # - total_progress_steps_count_int is number # Relaxing this, relying on |int filter
              - total_progress_steps_count_int > 0 # This is the most critical numeric check
            fail_msg: "Progress reporting task called with invalid parameters. current_progress_step_int: '{{current_progress_step_int}}', total_progress_steps_count_int: '{{total_progress_steps_count_int}}', progress_description: '{{progress_description}}'. Required: current_progress_step, total_progress_steps_count > 0, progress_description."
            quiet: true
          when: current_progress_step_int is defined and total_progress_steps_count_int is defined # Only assert if vars for assertion are set

        - name: "Calculate progress percentage"
          ansible.builtin.set_fact:
            _progress_percentage: "{{ ((current_progress_step_int | float / total_progress_steps_count_int | float) * 100) | round(0, 'floor') | int }}"
          when: current_progress_step_int is defined and total_progress_steps_count_int is defined and total_progress_steps_count_int > 0 and (current_progress_step_int | string is SANE_STRING_REGEX) and (total_progress_steps_count_int | string is SANE_STRING_REGEX)
          vars:
            SANE_STRING_REGEX: '^[0-9]+$' # Ensure they look like numbers before float conversion


        - name: "PROGRESS ({{ _progress_percentage | default('N/A') }}%) --- {{ progress_description | default('Waiting for details...') }}"
          ansible.builtin.debug:
            msg: "Progress: {{ _progress_percentage }}% --- {{ progress_description }}"
          changed_when: true # Always report as changed to get yellow output
          # The when condition for the entire "Reporting Mode" block still applies.
          # This debug task itself doesn't need an additional 'when: ansible_verbosity'
          # if the goal is for it to always show when in reporting mode.
          # If it should only show with verbosity, the block's 'when' would need adjustment,
          # or this task's 'when' would be:
          # when: ansible_verbosity >= 0 (or > 0 for -v and higher)
