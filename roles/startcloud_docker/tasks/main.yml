---
-
  name: "Ensuring apt cache is updated."
  ansible.builtin.apt:
    cache_valid_time: 3600
    update_cache: true  

-
  name: "Cleaning All previous Docker and Containerd installs"
  ansible.builtin.apt:
    state: absent
    name:
      - docker
      - docker-engine
      - docker.io
      - containerd
      - runc

-
  name: "Ensuring apt cache is updated"
  ansible.builtin.apt:
    cache_valid_time: 3600
    update_cache: true  

-
  name: "Upgrading all apt packages"
  ansible.builtin.apt:
    name:
      - ca-certificates
      - curl
      - gnupg
      - lsb-release

-
  name: "Adding Docker apt repository key"
  ansible.builtin.get_url:
    url: "https://download.docker.com/linux/ubuntu/gpg"
    dest: /etc/apt/trusted.gpg.d/docker.asc
    mode: '0644'
    force: true

-
  name: "Adding Docker APT repository"
  ansible.builtin.apt_repository:
    repo: deb [arch=arm64 signed-by=/etc/apt/trusted.gpg.d/docker.asc] https://download.docker.com/{{ ansible_system | lower }}/{{ ansible_distribution | lower }} {{ ansible_distribution_release }} stable
    update_cache: true

-
  name: "Installing Docker"
  ansible.builtin.apt:
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-buildx-plugin
      - docker-compose-plugin

-
  name: "Setting Docker Daemon"
  ansible.builtin.template:
    src: "docker-daemon.json.j2"
    dest: "/etc/docker/daemon.json"
    owner: "root"
    group: "root"
    mode: "0644"

#-
#  name: "Setting Docker SSL/TLS Service Options"
#  ansible.builtin.template:
#    src: "startup_options.conf.j2"
#    dest: "/etc/systemd/system/docker.service.d/startup_options.conf"
#    owner: "root"
#    group: "root"
#    mode: "0644"